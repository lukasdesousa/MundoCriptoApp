"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/grass/page",{

/***/ "(app-pages-browser)/./src/styles/components_styles/MainStyle/styled.ts":
/*!**********************************************************!*\
  !*** ./src/styles/components_styles/MainStyle/styled.ts ***!
  \**********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Main: () => (/* binding */ Main)\n/* harmony export */ });\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-components */ \"(app-pages-browser)/./node_modules/styled-components/dist/styled-components.browser.esm.js\");\n/* __next_internal_client_entry_do_not_use__ Main auto */ \nconst Main = styled_components__WEBPACK_IMPORTED_MODULE_0__[\"default\"].main.withConfig({\n    displayName: \"styled__Main\",\n    componentId: \"sc-878f80c1-0\"\n})([\n    \"font-family:inter,Arial,Helvetica,sans-serif;section.card-container{border-bottom:1px solid #E6E6E6;margin-bottom:15px;}section.tools{border-bottom:1px solid #E6E6E6;padding:17px;}section.main-timeline{text-align:center;span{hyphens:auto;font-size:100%;}p{text-align:inherit;padding:0;}}@media (max-width:575px){padding:7px;ul{list-style:none;padding:13px;}p,li{margin-top:15px;font-size:13px;text-align:justify;padding:10px;hyphens:auto;}p.opn-P,h1.opn-H1{text-align:left;}p.txt-access{opacity:0.85;text-align:center;}section.week-videos{border-bottom:1px solid  #e6e6e6;p{padding:0px 10px;}}h1,h2{font-size:20px;margin-top:10px;font-weight:bold;padding:0px 10px;text-align:center;}section.opn-inv{display:flex;flex-direction:column;overflow:scroll;scrollbar-width:none;margin-bottom:40px;section.opn-cards{display:flex;gap:10px;width:100%;}section.opn{width:100%;border-radius:5px;border:1px solid #E6E6E6;p.txt-access{margin-bottom:50px;font-size:17px;font-family:inter,Arial,Helvetica,sans-serif;font-weight:bold;opacity:1;}div{display:flex;flex-direction:column;border-radius:10px;margin:10px;width:300px;p{margin:0px;text-align:center;padding:2px;}section.photo-inv{display:flex;gap:10px;img{width:35px;height:35px;margin:0px;border-radius:100%;}section.details{display:flex;flex-direction:column;align-items:start;justify-content:center;.details-name{font-family:inter,Arial,Helvetica,sans-serif;font-size:12px;}.details-desc{font-family:inter,Arial,Helvetica,sans-serif;font-size:12px;}}}}}}}@media (min-width:576px) and (max-width:1000px){padding:7px;ul{list-style:inside;padding:20px;}img{width:90%;display:block;margin:20px auto;border-radius:10px;}p,li{margin-top:15px;margin-left:2px;font-size:100%;text-align:justify;}p.opn-P,h1.opn-H1{text-align:center;}p.txt-access{opacity:0.85;}h1,h2{font-size:25px;margin-top:10px;font-weight:bold;margin-right:10px;text-align:center;}button{background-color:black;color:white;width:120px;height:50px;border-radius:5px;font-size:15px;border:none;}.main-texts{p{padding:0px 100px;text-align:center;}}section.opn-inv{display:flex;flex-direction:column;overflow:scroll;scrollbar-width:none;margin-bottom:40px;section.opn-cards{display:flex;gap:10px;width:100%;}section.opn{width:100%;border-radius:5px;border:1px solid #E6E6E6;p.txt-access{margin-bottom:50px;font-size:17px;font-family:inter,Arial,Helvetica,sans-serif;font-weight:bold;opacity:1;}div{display:flex;flex-direction:column;border-radius:10px;margin:10px;width:300px;p{margin:0px;text-align:center;}section.photo-inv{display:flex;gap:10px;img{width:35px;height:35px;margin:0px;border-radius:100%;}section.details{display:flex;flex-direction:column;align-items:start;justify-content:center;.details-name{font-family:inter,Arial,Helvetica,sans-serif;font-size:12px;}.details-desc{font-family:inter,Arial,Helvetica,sans-serif;font-size:12px;}}}}}}}@media (min-width:1000px){padding:10px;section.week-videos{border-bottom:1px solid  #e6e6e6;p{padding:0px 180px;}}.img{width:100%;display:block;margin:20px auto;border-radius:10px;}p,li{margin-top:15px;font-size:20px;padding:5px;text-align:justify;}.main-texts{p{display:block;margin:auto;padding:20px 0px;width:90%;text-align:justify;}}ul{padding:16px;list-style:inside;}p.opn-P,h1.opn-H1{text-align:center;}h1.opn-H1{margin-top:40px;}p.opn-P{display:none;}p.txt-access{opacity:0.85;}h1,h2{font-size:30px;font-weight:bold;margin:20px 0px;text-align:center;}button{background-color:black;color:white;width:130px;height:60px;border-radius:5px;font-size:16px;border:none;margin-bottom:25px;}section.opn-inv{display:flex;flex-direction:column;overflow:scroll;scrollbar-width:none;margin-bottom:40px;section.opn-cards{display:flex;gap:10px;width:100%;}section.opn{width:100%;border-radius:5px;border:1px solid #E6E6E6;display:flex;flex-direction:column;p.txt-access{font-size:20px;font-family:inter,Arial,Helvetica,sans-serif;font-weight:bold;opacity:1;}div{display:flex;flex-direction:column;justify-content:space-evenly;border-radius:10px;margin:10px;flex:1;gap:80px;section.text-opn{max-height:20px;}p{margin:0px;text-align:center;}section.photo-inv{display:flex;align-items:center;justify-content:left;gap:10px;img{width:35px;height:35px;margin:0px;border-radius:100%;}section.details{display:flex;flex-direction:column;align-items:start;justify-content:center;.details-name{font-family:inter,Arial,Helvetica,sans-serif;font-size:12px;}.details-desc{font-family:inter,Arial,Helvetica,sans-serif;font-size:12px;}}}}}}}\"\n]);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/styles/components_styles/MainStyle/styled.ts\n"));

/***/ })

});